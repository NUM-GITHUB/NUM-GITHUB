<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/06/10/seaborn-1/"/>
      <url>/2019/06/10/seaborn-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Some-useful-distribution-related-function-in-Seaborn"><a href="#Some-useful-distribution-related-function-in-Seaborn" class="headerlink" title="Some useful distribution related function in Seaborn"></a>Some useful distribution related function in Seaborn</h1><p>*<font size="1" color="gray">I recently wrote some code for training some data with ML algorithm and I found that some functions are pretty used for data analysis</font>*</p><details open><summary><font size="4">  distplot() </font></summary><p>distplot() function are able to show univariate distribution. For more detailed information, click <a href="https://seaborn.pydata.org/tutorial/distributions.html#distribution-tutorial" target="_blank" rel="noopener"> here</a>. </p><p>*<font size="2" color="gray">   If you want to know a distribution of a numerical feature, you can try this.</font>*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import seaborn as sns </span><br><span class="line">sns.distplot(Input[0],label=&apos;Input&apos;,color=&apos;g&apos;)</span><br></pre></td></tr></table></figure><h4 id="The-commonly-used-parameters"><a href="#The-commonly-used-parameters" class="headerlink" title="The commonly used parameters :"></a>The commonly used parameters :</h4><ul><li>The input data </li><li>label: It will show on legend once you call <strong>plt.legend()</strong>. </li><li>Color: The color of the histogram and lines <em>(parameters are similar to matlab and the default color for first line is blue)</em>.</li></ul><p>You can draw distribution of one dimensional data by this with matplotlib.pyplot.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import seaborn as sns </span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">plt.figure()</span><br><span class="line"># Sometimes you may need to transpose(.T) your numpy array </span><br><span class="line">sns.distplot(fail_data[0],label=&apos;fail_data&apos;,color=&apos;g&apos;)</span><br><span class="line">plt.legend();</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>fail_data[0] is the first dimension of my data. The Result looks like that.</p><div align="center"><img src="/.com//chrome_2019-06-10_00-12-30.png" height="300" width="400"></div><p>Your image could be quite different, but both <strong>histogram</strong> and  <a href="https://en.wikipedia.org/wiki/Kernel_density_estimation" target="_blank" rel="noopener"> kernel density estimate (KDE)</a> line .</p><p>You could choose to remove histogram by setting <strong><font color="blue">hist=False</font></strong> or KDE by <strong><font color="blue">kde=False</font></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">sns.distplot(hist=False,fail_data[0],label=&apos;fail_data&apos;,color=&apos;g&apos;)</span><br><span class="line">plt.legend();</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><div align="center"><img src="/.com//chrome_2019-06-10_00-37-08.png" height="300" width="400"></div><p>If you want to draw more than one distribution on same figure, just add anther above plt.show()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">sns.distplot(scuss_data[2],label=&apos;scuss_data&apos;)</span><br><span class="line">sns.distplot(fail_data[2],color=&apos;g&apos;,label=&apos;fail_data&apos;)</span><br><span class="line">plt.legend();</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><div align="center"><img src="/.com//chrome_2019-06-10_00-26-08.png" height="300" width="400"></div></details><details open><summary><font size="4">  violinplot() </font></summary>It is still used for showing distribution. The data I used here are look like that:<table><thead><tr><th>0</th><th align="center">1</th><th align="right">2</th><th align="right">3</th></tr></thead><tbody><tr><td>0.000020</td><td align="center">0.001459</td><td align="right">7.992451</td><td align="right">1.0</td></tr><tr><td>0.000021</td><td align="center">0.001149</td><td align="right">6.903953</td><td align="right">0.0</td></tr><tr><td>0.000029</td><td align="center">0.001637</td><td align="right">6.512294</td><td align="right">0.0</td></tr><tr><td>0.000028</td><td align="center">0.001208</td><td align="right">1.936095</td><td align="right">1.0</td></tr><tr><td>。。。。。。。。。。。。。。。。</td><td align="center"></td><td align="right"></td><td align="right"></td></tr></tbody></table><p>The first 3 rows are values correspond to feature 0,1,2.<br>The third row is classes (only 0 and 1)</p><p>Thus, if I want to find the distribution of feature 1 in each class, we can just write </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">sns.violinplot(x=3,y=1, data=pd.DataFrame(data))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><div align="center"><img src="/.com//chrome_2019-06-10_01-12-02.png" height="300" width="400"></div><ul><li>x is class row</li><li>y is feature row</li><li>Input data must be pandas data structure.</li><li>You can also input the name (string) of each row to x and y, if you have.</li></ul><p>You can also plot many figures in this way </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f, ax1 = plt.subplots(ncols=2, nrows=2, figsize=(8, 8))</span><br><span class="line">sns.violinplot(x=3,y=0, data=pd.DataFrame(data),ax=ax1[0][0])</span><br><span class="line">ax1[0][0].set_title(&apos;x&apos;)</span><br><span class="line">sns.violinplot(x=3,y=1, data=pd.DataFrame(data),ax=ax1[0][1])</span><br><span class="line">ax1[0][1].set_title(&apos;y&apos;)</span><br><span class="line">sns.violinplot(x=3,y=2, data=pd.DataFrame(data),ax=ax1[1][0])</span><br><span class="line">ax1[1][0].set_title(&apos;z&apos;)</span><br><span class="line">f.tight_layout()</span><br></pre></td></tr></table></figure><ul><li>ax can be used to set the position of figures</li></ul><div align="center"><img src="https://num-github.github.io/seaborn-1/chrome_2019-06-10_01-19-24.png" height="300" width="400"></div></details>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Get start !</title>
      <link href="/2019/06/06/Get-start/"/>
      <url>/2019/06/06/Get-start/</url>
      
        <content type="html"><![CDATA[<p>The start of my career.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/06/05/hello-world/"/>
      <url>/2019/06/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
